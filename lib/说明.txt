2022-10-21
问题描述：
1.客户使用应用初始化后，按任意键，cpu使用率达100%

解决：
1.按键线程出现死循环，当有数据的时候（按键被按下时），线程检测到数据，但是没有读取数据，造成循环一直执行，cpu利用率达到100%。修改后正常
修改代码：lib/panel/keyboard.c  53行到62行，将read函数移出到if(s_key_notify_func)的外面去。



2022-11-24  //722根据3代台的测试
1. 由于3代台没有按键，drvCoreBoardInit函数中，对于keyboard_init函数不再判断返回值，以适应无键盘的设备使用。
2. keyboard函数增加一个全局变量key_inited，标识是否键盘初始化成功，成功为1，不成功则为0，调用键盘其他接口时，则根据这个是否进行下一步。
3.s_recv_gpio_event_thread 函数（misc.c），select取消定时器部分，定时器超时导致线程退出，导致无法正常上报ppt的状态。
4.get_handle_insert_status函数和get_headset_insert_status函数（misc.c），增加读取gpio状态的操作，以适应客户要求，在开机前就已经插入手柄的状态的正常反馈。
	之前是无法正确查询已经插入的状态的，不过事件可以上报插入、拔出的功能。
5.调试55所lcd亮度的时候，出现假死的问题，就是数值在变，但是lcd亮度不改变。通过调试发现亮度值是3的倍数时，情况明显好转。所以在设置亮度的时候对相关的值就行了修正。
	lcd亮度调整是通过串口指令实现的，之前是有等待应答处理，现在已经把应答全部注释掉了。
	这个串口的打开也做了调整，就是打开后不再关闭，免得每次调用接口就需要重新打开关闭串口文件。
6.增加了一个lcd亮度调用接口的测试程序，只用调用drvSetLcdBrt即可，命令行参数可以设置每一次循环的等待时间（1ms-10s）和每次增量的步长（1-50）.
	./lcd_brt_test 10 1  时间为10ms变化一个步长，步长设置为1.
7.drv722test退出的时候出现卡死的问题，增加了pthread_cancel函数，结束正在执行的线程，解决退出时等待线程结束而导致的卡死问题。


2023-01-03
1.应客户要求，需要增加lcd屏的单片机版本查询和keyborad的单片机版本查询
2.在screen.c 中增加 drvGetLCDMcuVersion 函数
3.在keyboard.c 中增加 getKeyboardMcuVersion 函数
4.在test的目录的main.c增加对应的测试调用。

2023-01-05
1.应客户要求，getKeyboardType函数中，打印出从单片机得到的原值。增加一句打印。


2023-02-01
1.应客户要求，增加对 Yt8521sh 的检测，提供drvHasYt8521sh(void)接口，返回1表示找到了Yt8521sh（增加misc/modio-cmd-rk3399.c）
2.drv722test同步加入了该函数的测试



2023-02-22
1.客户说es8388 0x1a和0x1b寄存器的值应该调到最大，所以在drvCoreBoardInit 增加两句调整8388寄存器的语句。
2.0x12 的值设置为0x3a


2023-02-27
1. 之前（24号）是8388的音量无法完全关闭，就是设置静音的同时，需要把对应通道的音量调到最低，这样就不会有声音输出了。
2.之后客户说，这个控制由他们自己的界面应用逻辑去完成。现在在misc.c中，增加宏#define VOL_MUTE_HANDLE_BY_REDUCE，并且把宏注释掉了。
   目前代码不能生效，就是不会把音量调到0了。如果需要这个逻辑，需要把对应的宏打开。


2023-02-28
1.增加  禁止所有mic通道void drvMuteAllMic(void)  ，misc.c


2023-03-16
1.es8388 0x3寄存器的值设置为0x08
2.串口初始化做了一些调整，增加cfmakeraw(&termios);函数，解决读取电流时出现0值，失败的问题。
3.本次md5sum : 3e0cc8049701e66e3f3956840d68a82e  libdrv722.so
